{"version":3,"sources":["Components/ChangePassword.js","Components/Home.js","Components/ForgotPassword.js","Components/Users.js","App.js","index.js"],"names":["ChangePassword","push","useHistory","React","useState","password","setPassword","cPassword","setCPassword","match","setMatch","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","email","localStorage","getItem","then","data","json","response","alert","message","code","setTimeout","className","action","htmlFor","type","id","value","required","onChange","target","onClick","Home","mode","setMode","name","setName","setEmail","console","log","setItem","token","user","href","ForgotPassword","props","otp","setOTP","OTP","toString","sendOTP","trim","placeholder","Users","users","setUsers","useEffect","Headers","concat","clear","map","i","index","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dcdbe67.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ChangePassword = () => {\r\n    const { push } = useHistory();\r\n    const [password, setPassword] = React.useState('');\r\n    const [cPassword, setCPassword] = React.useState('');\r\n    const [match, setMatch] = React.useState(false);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password === cPassword) {\r\n            let response = await fetch('https://damp-caverns-01669.herokuapp.com/forgotPassword', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: localStorage.getItem('email'),\r\n                    password: password\r\n                })\r\n            }).then((data) => data.json());\r\n            alert(response.message);\r\n            if (response.code === 'green') {\r\n                push('/login')\r\n            }\r\n        } else {\r\n            setMatch(!match);\r\n            setTimeout(() => {\r\n                setMatch(!match)\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"card-title\">\r\n                    <p className=\"h4 text-center\">Change Password</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"card-text\">\r\n                    <form action=\"\">\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-sm-12\">\r\n                                <label htmlFor=\"password\">New Password</label>\r\n                                <input type=\"password\"\r\n                                    id='password'\r\n                                    className=\"form-control\"\r\n                                    value={password}\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        setPassword(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-sm-12\">\r\n                                <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n                                <input type=\"password\"\r\n                                    id='confirmPassword'\r\n                                    className=\"form-control\"\r\n                                    value={cPassword}\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        setCPassword(e.target.value)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        {(match) ? <div className=\"row ml-2 mr-2 mb-3 mt-5\">\r\n                            <div className=\"col-sm-12\">\r\n                                <p className=\"text-center text-danger\">Passwords didnot match</p>\r\n                            </div>\r\n                        </div> : null}\r\n                        <div className=\"row mb-3 mt-5\">\r\n                            <div className=\"col-sm-12 text-center\">\r\n                                <button className=\"btn btn-success\"\r\n                                    type='submit'\r\n                                    onClick={(e) => { handleSubmit(e); }}>Change password</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const Home = () => {\r\n    const [mode, setMode] = React.useState(false);\r\n    const [match, setMatch] = React.useState(false);\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [cPassword, setCPassword] = React.useState('');\r\n    const { push } = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (mode) {\r\n            if (password !== cPassword) {\r\n                setMatch(true)\r\n                setTimeout(() => { setMatch(false) }, 1000)\r\n            } else {\r\n                let response = await fetch('https://damp-caverns-01669.herokuapp.com/signUp', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: name,\r\n                        email: email,\r\n                        password: password,\r\n                    })\r\n                }).then((data) => data.json()).then((data) => {\r\n                    if (data.message === 'SignUp successful') setMode(!mode);\r\n                })\r\n\r\n\r\n            }\r\n        } else {\r\n            let response = await fetch('https://damp-caverns-01669.herokuapp.com/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    password: password\r\n                })\r\n            }).then((data) => data.json());\r\n            console.log(response)\r\n            if (response.code !== 'red') {\r\n                console.log(response)\r\n                localStorage.setItem('token', response.token);\r\n                localStorage.setItem('user', JSON.stringify(response.user));\r\n                alert(response.message);\r\n                push('/users')\r\n\r\n            } else {\r\n                alert(response.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center m-5 pt-3\">\r\n                <div className=\"col-lg-6 col-md-8 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">\r\n                                <p className=\"h4 text-center\">{(!mode) ? 'Login' : 'SignUp'}</p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"card-text\">\r\n                                <form action=\"\">\r\n                                    {mode ?\r\n                                        <>\r\n                                            <div className=\"row ml-2 mr-2 mb-3\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <label htmlFor=\"username\">Username</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        id='username'\r\n                                                        className=\"form-control\"\r\n                                                        value={name}\r\n                                                        required\r\n                                                        onChange={(e) => {\r\n                                                            setName(e.target.value)\r\n                                                        }} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </> : null}\r\n                                    <div className=\"row ml-2 mr-2 mb-3\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <label htmlFor=\"email\">EmailId</label>\r\n                                            <input type=\"email\"\r\n                                                id='email'\r\n                                                className=\"form-control\"\r\n                                                value={email}\r\n                                                required\r\n                                                onChange={(e) => {\r\n                                                    setEmail(e.target.value)\r\n                                                }} />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"row ml-2 mr-2 mb-3\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                            <input type=\"password\"\r\n                                                id='password'\r\n                                                className=\"form-control\"\r\n                                                value={password}\r\n                                                required\r\n                                                onChange={(e) => {\r\n                                                    setPassword(e.target.value)\r\n                                                }} />\r\n                                        </div>\r\n                                    </div>\r\n                                    {mode ?\r\n                                        <>\r\n                                            <div className=\"row ml-2 mr-2 mb-3\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                                    <input type=\"password\"\r\n                                                        id='confirmPassword'\r\n                                                        className=\"form-control\"\r\n                                                        value={cPassword}\r\n                                                        required\r\n                                                        onChange={(e) => {\r\n                                                            setCPassword(e.target.value)\r\n                                                        }} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </> : null}\r\n                                    {(match && mode) ? <div className=\"row ml-2 mr-2 mb-3 mt-5\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <p className=\"text-center text-danger\">Passwords didnot match</p>\r\n                                        </div>\r\n                                    </div> : null}\r\n                                    <div className=\"row ml-2 mr-2 mb-3 mt-5\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <button className=\"btn btn-outline-danger\" type='submit'\r\n                                                onClick={(e) => { handleSubmit(e); }}>\r\n                                                {(!mode) ? 'Login' : 'SignUp'}\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        {(!mode) ? <p className='text-primary' onClick={() => push('/forgotpassword')}>Forgot Password ?</p> : null}\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-3\">\r\n                                        <a href=\"#\" onClick={() => setMode(!mode)}>Switch to {(mode) ? 'Login' : 'SignUp'}</a>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const ForgotPassword = (props) => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [otp, setOTP] = React.useState('');\r\n    const handleSubmit = async () => {\r\n        let OTP = localStorage.getItem('otp');\r\n        if (OTP) {\r\n            if (otp.toString() === OTP.toString()) {\r\n                push('/change')\r\n            } else {\r\n                alert('wrong otp')\r\n            }\r\n        } else {\r\n            alert('please enter email first');\r\n        }\r\n    }\r\n    const { push } = useHistory();\r\n    const sendOTP = async () => {\r\n        if (email.trim() === '') { alert('Please Fill Email') }\r\n        else {\r\n            let response = await fetch('https://damp-caverns-01669.herokuapp.com/checkEmail', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email })\r\n            }).then((data) => data.json());\r\n            if (response.code === 'green') {\r\n                localStorage.setItem('otp', response.otp);\r\n                localStorage.setItem('email', response.email);\r\n            }\r\n            alert(response.message);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-center m-5 pt-3\">\r\n                <div className=\"col-lg-6 col-md-8 col-sm-12\">\r\n                    <div className=\"card shd\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">\r\n                                <p className=\"h4 text-center\">Password Recovery</p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"card-text\">\r\n                                <form action=\"\">\r\n                                    <div className=\"row mr-2 ml-2 mb-2\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <label htmlFor=\"email\">Your Email</label>\r\n                                            <input type=\"email\"\r\n                                                id='email'\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={(e) => {\r\n                                                    setEmail(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mr-2 ml-2 mb-2\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <p className=\"text-center\">An OTP will be sent to your mail</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mr-2 ml-2 mb-5\">\r\n                                        <div className=\"col-sm-12 text-center\">\r\n                                            <p className=\"text-center\">\r\n                                                <button className=\"btn btn-success\"\r\n                                                    type='button'\r\n                                                    onClick={sendOTP}>Send OTP</button></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mr-2 ml-2 mb-5\">\r\n                                        <div className=\"col-sm-12 text-center\">\r\n                                            <label htmlFor=\"otp\">OTP</label>\r\n                                            <input type=\"number\"\r\n                                                id='otp'\r\n                                                className=\"form-control\"\r\n                                                placeholder='Enter OTP here'\r\n                                                required\r\n                                                value={otp}\r\n                                                onChange={(e) => {\r\n                                                    setOTP(e.target.value)\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mr-2 ml-2 mb-5\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <button className=\"btn btn-outline-danger\"\r\n                                                type='button'\r\n                                                onClick={(e) => { handleSubmit(e); }}>Validate</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mr-2 ml-2 mb-5\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <p className='text-primary' onClick={() => push('/home')}>Back to Log-In</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nexport const Users = () => {\r\n    const { push } = useHistory();\r\n    let [users, setUsers] = React.useState([]);\r\n    React.useEffect(() => {\r\n        fetch('https://damp-caverns-01669.herokuapp.com/users', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            })\r\n        }).then((data) => data.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                if (data.code === 'red') {\r\n                    alert('Access Denied');\r\n                    push('/login');\r\n                } else {\r\n                    console.log(data.users)\r\n                    setUsers(users.concat(data.users))\r\n                }\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row justify-content-end\">\r\n                <div className=\"col-4\">\r\n                    <p className=\"text-right\">\r\n                        <button className=\"btn btn-danger\" onClick={() => {\r\n                            localStorage.clear();\r\n                            push('/login')\r\n                        }}>Logout</button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">\r\n                                <p className=\"h4 text-center\">Users</p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"card-text\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            <th className=\"text-center\">UserName</th>\r\n                                            <th className=\"text-center\">Email</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {users.map((i, index) => {\r\n                                            return (\r\n\r\n                                                <tr key={index}>\r\n                                                    <td className=\"text-center\">{i.name}</td>\r\n                                                    <td className=\"text-center\">{i.email}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ChangePassword } from './Components/ChangePassword';\nimport { Home } from './Components/Home';\nimport { ForgotPassword } from './Components/ForgotPassword';\nimport { Users } from './Components/Users';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path='/forgotpassword' exact={true} component={ForgotPassword} />\n          <Route path='/change' exact={true} component={ChangePassword} />\n          <Route path='/login' exact={true} component={Home} />\n          <Route path='/users' exact={true} component={Users} />\n          <Route path='/' component={Home} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}